pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
        GIT_REPO_NAME = 'Tetris-Game1'
        GIT_USER_NAME = 'gagnish' 
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/gagnish/Tetris-Game1.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=TetrisVersion1.0 \
                    -Dsonar.projectKey=TetrisVersion1.0 '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            } 
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){   
                       sh 'docker system prune -f'
                       sh 'docker container prune -f'
                       sh "docker build -t tetrisv1 ."
                       sh 'docker tag tetrisv1 gagnish/tetrisv1:${BUILD_NUMBER}'
                       sh 'docker push gagnish/tetrisv1:${BUILD_NUMBER}'
                       
                    }
                }
            }
        }
        stage("TRIVY"){
            steps{
                sh "trivy image gagnish/tetrisv1:${BUILD_NUMBER} > trivyimage.txt" 
            }
        } 

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/gagnish/Tetris-Game1.git'
            }
        }

        stage("Update Deployment File"){
            environment {
                GIT_REPO_NAME = "Tetris-Game1"
                GIT_USER_NAME = "gagnish"
            }
            //steps{
              //  dir("deploymentfile"){
              //  script {
              //      withCredentials([string(credentialsId: 'github1', variable: 'GITHUB_TOKEN')]) {
               //        NEW_IMAGE_NAME = "gagnish/tetrisv1:latest"  
               //        sh "sed -i 's|image: .*|image: $NEW_IMAGE_NAME|' deployment-service.yml"
                 //      sh 'git add deployment-service.yml'
                   //    sh "git commit -m 'Update deployment image to $NEW_IMAGE_NAME'"
                     //  sh "git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master"     
            steps {
                 dir('deploymentfile') {
                    withCredentials([string(credentialsId: 'github1', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "gagnishdhiman@gmail.com"
                            git config user.name "gagnish"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            imageTag=$(grep -oP '(?<=tetrisv1:)[^ ]+' deployment-service.yml)
                            echo $imageTag
                            sed -i "s/tetrisv1:${imageTag}/tetrisv1:${BUILD_NUMBER}/" deployment-service.yml
                            git add deployment-service.yml
                            git commit -m "Update deployment Image to version \${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    } 
                }
                always {
                    deleteDir()
                }                
            } 
                
        }
    }
}